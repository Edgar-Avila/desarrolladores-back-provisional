generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Post {
  PostID              Int                  @id(map: "PK__Post__AA126038BC12A16C") @default(autoincrement())
  ImageUrl            String?              @db.VarChar(2083)
  PublicationDate     DateTime             @default(now(), map: "DF__Post__Publicatio__12C8C788") @db.DateTime
  Title               String?              @db.VarChar(100)
  Content             String               @db.VarChar(Max)
  UserID              Int
  LanguageID          Int?
  ProgrammingLanguage ProgrammingLanguage? @relation(fields: [LanguageID], references: [LanguageID], onUpdate: NoAction, map: "FK__Post__LanguageID__15A53433")
  User                User                 @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: NoAction, map: "FK__Post__UserID__14B10FFA")
  Comment             Comment[]
  Like                Like[]
}

model ProgrammingLanguage {
  LanguageID Int    @id(map: "PK__Programm__B938558BF7F0DB9B") @default(autoincrement())
  Name       String @db.VarChar(50)
  Post       Post[]
}

model User {
  UserID            Int       @id(map: "PK__User__1788CCACF20F5FDB") @default(autoincrement())
  Username          String    @unique(map: "UQ__User__536C85E4EEBEDF5E") @db.VarChar(100)
  ProfilePictureUrl String?   @db.VarChar(2083)
  Password          String    @db.Char(60)
  RefreshToken      String?   @db.Char(60)
  Comment           Comment[]
  Like              Like[]
  Post              Post[]
}

model Like {
  LikeID Int  @id(map: "PK__Like__A2922CF4B34A9A9E") @default(autoincrement())
  UserID Int
  PostID Int
  Post   Post @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: NoAction, map: "FK__Like__PostID__1975C517")
  User   User @relation(fields: [UserID], references: [UserID], onUpdate: NoAction, map: "FK__Like__UserID__1881A0DE")
}

model Comment {
  CommentId     Int       @id(map: "PK__Comment__C3B4DFCAC3DF391C") @default(autoincrement())
  Content       String    @db.VarChar(Max)
  AnsweredID    Int?
  UserID        Int
  PostID        Int
  Comment       Comment?  @relation("CommentToComment", fields: [AnsweredID], references: [CommentId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Comment__Answere__1F2E9E6D")
  Post          Post      @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: NoAction, map: "FK__Comment__PostID__1E3A7A34")
  User          User      @relation(fields: [UserID], references: [UserID], onUpdate: NoAction, map: "FK__Comment__UserID__1D4655FB")
  other_Comment Comment[] @relation("CommentToComment")
}
