generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  PostID              Int                  @id @default(autoincrement())
  ImageUrl            String?              @db.VarChar(2083)
  PublicationDate     DateTime             @default(now())
  Title               String?              @db.VarChar(100)
  Content             String               @db.Text
  UserID              Int
  LanguageID          Int?
  ProgrammingLanguage ProgrammingLanguage? @relation(fields: [LanguageID], references: [LanguageID], onUpdate: NoAction)
  User                User                 @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: NoAction)
  Comment             Comment[]
  Like                Like[]
}

model ProgrammingLanguage {
  LanguageID Int    @id @default(autoincrement())
  Name       String @db.VarChar(50)
  Post       Post[]
}

model User {
  UserID            Int       @id @default(autoincrement())
  Username          String    @unique @db.VarChar(100)
  ProfilePictureUrl String?   @db.VarChar(2083)
  Password          String    @db.Char(60)
  RefreshToken      String?   @db.Char(60)
  Comment           Comment[]
  Like              Like[]
  Post              Post[]
}

model Like {
  UserID Int
  PostID Int
  Post   Post @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: NoAction)
  User   User @relation(fields: [UserID], references: [UserID], onUpdate: NoAction)

  @@id([UserID, PostID])
}

model Comment {
  CommentID  Int       @id @default(autoincrement())
  Content    String    @db.Text
  AnsweredID Int?
  UserID     Int
  PostID     Int
  Comment    Comment?  @relation("CommentToComment", fields: [AnsweredID], references: [CommentID], onDelete: Cascade, onUpdate: NoAction)
  Post       Post      @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: NoAction)
  User       User      @relation(fields: [UserID], references: [UserID], onUpdate: NoAction)
  Children   Comment[] @relation("CommentToComment")
}
